/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Set_Order.java
 *
 * Created on Jul 29, 2010, 12:57:57 AM
 */

/**
 *
 * @author jalatif abhi
 */
import javax.swing.*;
import java.awt.event.*;
public class Set_Order extends javax.swing.JFrame implements ActionListener{
static int n=new View_Questions().qno(),hi,ls=0;
static JLabel jLabel[]=new JLabel[n];
static JComboBox jComboBox[]=new JComboBox[n];
static int or[]=new int[n];
static JButton b1=new JButton("Set");
static JButton b2=new JButton("ReSet");
static JLabel l=new JLabel("Please fill all the orders");
/** Creates new form Set_Order */
    public Set_Order() {
        initComponents();
        setTitle("SET_ORDER_MANUALLY");
        if (n<30)hi=n*28+50;
        else hi=700;
        setSize((n/30 +1)* 300+100,hi);
        /*for (int i=0;i<n;++i){
            System.out.println(or[i]);//or[i]=0;
        }*/
        for (int i=0;i<n;++i){
          jLabel[i]=new JLabel(" "+(i+1)+"  -  ");
          jComboBox[i]=new JComboBox();
        }
        add(b1);add(b2);add(l);
        b1.setBounds(5,5,60,30);b2.setBounds(250,5,100,30);
        l.setBounds(100,5,150,30);
        b1.addActionListener(this);b2.addActionListener(this);
        combos();
    for (int j = 0; j < n; ++j) {
       if (j<30){
        add(jLabel[j]);
         jLabel[j].setBounds(10, 20+20*(j+1), 50, 20);
       add(jComboBox[j]);
         jComboBox[j].setBounds(110, 20+20*(j+1), 80, 20);
       }

       if (j<60&&j>29){
        add(jLabel[j]);
         jLabel[j].setBounds(260, 20+20*(j-30+1), 50, 20);
         add(jComboBox[j]);
         jComboBox[j].setBounds(360, 20+20*(j-30+1), 80, 20);
       }
     if (j<90&&j>59){
        add(jLabel[j]);
         jLabel[j].setBounds(510, 20+20*(j-60+1), 50, 20);
          add(jComboBox[j]);
         jComboBox[j].setBounds(610, 20+20*(j-60+1), 80, 20);
      }
     if (j<120&&j>89){
        add(jLabel[j]);
         jLabel[j].setBounds(760, 20+20*(j-90+1), 50, 20);
          add(jComboBox[j]);
         jComboBox[j].setBounds(860, 20+20*(j-90+1), 80, 20);
      }
    }
     //combo_set();
    }
    public void combos(){
    for (int i=0;i<n;++i){
        jComboBox[i].addItem("SNo");
        jComboBox[i].addActionListener(this);
        for (int j=0;j<n;++j){
        jComboBox[i].addItem(j+1);
        }
    }    
    }
    public void combo_set(){
  for (int i=0;i<n;++i){
    if (or[i]!=0){
        if (jComboBox[i].isEnabled()){
        jComboBox[i].setSelectedItem(or[i]);
        jComboBox[i].enable(false);}
    }
  }
  for (int i=0;i<n;++i){
    for (int j=0;j<n;++j){
      if (or[i]!=0){
       if (jComboBox[j].isEnabled()){
          jComboBox[j].removeItem(or[i]);}
      }
    }
  }
    }
    public void actionPerformed(ActionEvent evt){
    int rst=0;
        if (evt.getSource()==b1){ls=1;
    int sum1=0,pro1=1,sum2=0,pro2=1;
      for (int i=0;i<n;++i){
        sum2+=or[i];pro2*=or[i];
        sum1+=(i+1);pro1*=(i+1);
      }
   if (sum1!=sum2||pro1!=pro2){
      l.setText("some order missing");
   }
 else{
       { View_Questions obj=new View_Questions();
           l.setText("Ques Order changed");
           /*for (int i=0;i<n;++i){
               //obj.or[i]=or[i];
            System.out.println(or[i]);
           }*/
           setVisible(false);
       }
 }
  }
  if (evt.getSource()==b2){ls=1;
  for (int i=0;i<n;++i){
      jComboBox[i].setEnabled(true);
        jComboBox[i].removeAllItems();
       if (or[i]!=0)
       {
           or[i] = 0;rst++;}
    }
   for (int i=0;i<n;++i){
     jComboBox[i].addItem("SNo");
  for (int j=0;j<n;++j){
     jComboBox[i].addItem(j+1);
     }
    }
 for (int i=0;i<rst;++i)
   b2.doClick();

  }
             
     
       if (ls!=1){
         x:
           for (int i=0;i<n;++i){
       if (evt.getSource()==jComboBox[i]){
        try{
           or[i]=Integer.parseInt(String.valueOf(jComboBox[i].getSelectedItem()));
           }
        catch(Exception e){
            //System.out.println(e);l.setText("Enter valid order");
        }
           break x;
       }
   }
           combo_set();
      }
          ls=0;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
   try {
	    // Set System L&F
        //UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName());
  }
catch(Exception e){
    System.out.println(e);
}
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (new Start().z==0){
                new Error_Order().setVisible(true);}
                else
                new Set_Order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
